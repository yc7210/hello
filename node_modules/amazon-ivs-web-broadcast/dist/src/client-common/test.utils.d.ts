/*! Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved. SPDX-License-Identifier: Apache-2.0 */
import { StageAnalyticsEvent } from '../stage/core-api/analytics/event';
import { TraceId } from '../stage/core-api/analytics/random.uuid';
import { StageToken } from '../stage/core-api/token';
interface GuestStarTokenAttributes {
    gs_role?: string;
    gs_session_id?: string;
}
/**
 * Creates test stage token.
 *
 * @param obj - Obj.
 * @param obj.stageArn - Stage Arn participant wants to join.
 * @param obj.participantId - Participant identifier.
 * @param obj.eventsURL - Events ingestion URL.
 * @param obj.whipURL - Whip URL.
 * @param obj.userID - Participant user identifier.
 * @param obj.expirationTime - Token expiration time.
 * @param obj.attributes - Token claims.
 */
declare function makeTestToken({ stageArn, participantId, eventsURL, whipURL, userID, expirationTime, topic, attributes, }: {
    stageArn: string;
    participantId: string;
    eventsURL: string;
    whipURL: string;
    userID: string;
    expirationTime: number;
    topic?: string;
    attributes?: GuestStarTokenAttributes;
}): string;
/**
 * Creates basic test stages token.
 */
declare function makeBasicTestToken(): string;
/**
 * Checks basic properties for stage analytics events.
 *
 * @param ev - Event.
 * @param parsedToken - Parsed stages token.
 * @param traceId - Logging identifier.
 */
declare function checkBasicEventProperties(ev: StageAnalyticsEvent, parsedToken: StageToken, traceId: TraceId | undefined): void;
export { checkBasicEventProperties, makeBasicTestToken, makeTestToken };
