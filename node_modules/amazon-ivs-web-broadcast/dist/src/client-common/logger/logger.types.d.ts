/*! Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved. SPDX-License-Identifier: Apache-2.0 */
export declare enum LogLevels {
    TRACE = 0,
    DEBUG = 1,
    INFO = 2,
    WARN = 3,
    ERROR = 4,
    SILENT = 5
}
export declare enum LoggerScope {
    SPADE = "SPADE",
    TIME = "Time",
    WEBRTC = "WebRTC",
    EMITTER = "Emitter",
    MEDIA = "Media",
    SUBSCRIPTION = "StageSubscription",
    PUBLICATION = "StagePublication",
    CONNECTION = "StageConnection",
    SOCKET = "StageSocket",
    BROADCAST_STAGE_CLIENT = "BroadcastStageClient",
    STAGE = "Stage",
    REMOTE_PARTICIPANT = "RemoteParticipant",
    LOCAL_PARTICIPANT = "LocalParticipant"
}
export interface LoggerParams {
    scope: LoggerScope;
}
export interface LogParams {
    [key: string]: unknown;
    label?: string;
    msg?: string;
    err?: Error | unknown;
    scope?: LoggerScope;
    metadata?: {
        [key: string]: unknown;
    };
    t?: number;
    level?: string;
}
export interface ErrorLogParams extends LogParams {
    err: Error | unknown;
}
export declare type LogFn = (args: LogParams) => void;
export declare type ErrorFn = (args: ErrorLogParams) => void;
export interface LogMessage {
    [key: string]: unknown;
    label?: string;
    msg?: string;
    err?: Error | unknown;
}
export interface ErrorLogMessage extends LogMessage {
    err: Error | unknown;
}
export interface Logger {
    debug: LogFn;
    error: ErrorFn;
    info: LogFn;
    warn: LogFn;
}
