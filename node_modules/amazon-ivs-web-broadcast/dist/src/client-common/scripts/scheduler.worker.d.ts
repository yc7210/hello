export declare const ctx: Worker;
/**
 * A utility class handling all of the functionality for the WebWorker.
 */
export declare class Scheduler {
    config: {
        frameRate: number;
        isRunning: boolean;
    };
    private intervalId?;
    /**
     * Initializes the WebWorker scheduler with a default configuration.
     */
    constructor();
    /**
     * Merges a provided configuration with the existing config property.
     *
     * @param config - A partial configuration object.
     */
    setConfig(config: Partial<Scheduler['config']>): void;
    /**
     * Starts an interval that runs at a provided rate defined by [[Scheduler.config.frameRate]].
     * The interval emits a postMessage to the main thread requesting a canvas redraw.
     */
    start(): void;
    /**
     * Stops the Scheduler's interval.
     */
    stop(): void;
}
/**
 * Handles events incoming from the main thread.
 *
 * @param event - A [[MessageEvent]] provided by the main thread.
 */
export declare function handleEvent(event: MessageEvent<WorkerActions>): void;
