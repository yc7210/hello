/*! Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved. SPDX-License-Identifier: Apache-2.0 */
import { AnalyticsEvent } from './events/base-analytics.types';
export declare const DEFAULT_URL = "https://broadcast.stats.live-video.net/";
declare type HTTP_METHOD = 'GET' | 'POST';
interface XHRHeaders {
    [key: string]: string;
}
export declare function ajax(method: HTTP_METHOD, url: string, headers?: XHRHeaders, body?: string): Promise<string>;
/**
 * Wrapper class for Spade analytics.
 */
export declare class SpadeClient {
    private spadeUrl;
    /**
     * Creates the SpadeClient
     *
     * @param spadeUrl - URL to emit Spade events to.
     * @returns {SpadeClient} An instance of [[SpadeClient]].
     */
    constructor(spadeUrl?: string);
    /**
     * Sends tracking data to Spade.
     *
     * @param analyticsData - A Spade analytics event
     * @param analyticsData.event - An event of type [[BroadcastSessionEvents]].
     * @param analyticsData.properties - Object containing arbitrary properties to be tracked.
     * @param useBeacon - send events using Beacon API to ensure reliable delivery on page unload
     * @private
     */
    send(analyticsData: AnalyticsEvent['data'][], useBeacon?: boolean): Promise<void>;
    /**
     * Base64 unicode encodes a provided string.
     *
     * @param str - An arbitrary string.
     * @private
     */
    private b64EncodeUnicode;
}
export {};
