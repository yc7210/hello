import 'reflect-metadata';
import { DEFAULT_STAGE_LANDSCAPE, DEFAULT_STAGE_PORTRAIT, StageClientConfig } from './src/stage/core-api/configuration';
import { StagePublication } from './src/stage/core-api/stage-publication';
import { StageSubscription, SubscriptionConnectionState } from './src/stage/core-api/stage-subscription';
import { AmazonIVSBroadcastStageClient } from './src/stage/v1/broadcast-stage-client';
import * as IVSBroadcastClient from './src/broadcast';
import { Config } from './src/broadcast/configuration';
declare function createStageClient(stageClientConfig: StageClientConfig): AmazonIVSBroadcastStageClient;
/**
 * Send join event. To be removed.
 *
 * @param token - JWT token to log
 */
declare function stagesSendJoinEvent(token: string): void;
/**
 * Send leave event. To be removed.
 *
 * @param token - JWT token to log.
 * @param reason - Reason for leaving.
 */
declare function stagesSendLeaveEvent(token: string, reason: string): void;
export { DEFAULT_STAGE_LANDSCAPE, DEFAULT_STAGE_PORTRAIT };
export { createStageClient, stagesSendJoinEvent, stagesSendLeaveEvent };
export { BroadcastStageConnectionEvents } from './src/stage/core-api/stage-events';
export { type Participant } from './src/stage/core-api/stage-connection';
export { type BroadcastStageConnectionEventPayloads } from './src/stage/core-api/stage-events';
export { type Config, type StageClientConfig, type AmazonIVSBroadcastStageClient, type StageSubscription, type StagePublication, type SubscriptionConnectionState, };
export default IVSBroadcastClient;
export * from './src/broadcast';
